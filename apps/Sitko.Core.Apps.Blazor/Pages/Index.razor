@page "/"
@using Sitko.Core.Apps.Blazor.Data.Entities
@inherits BaseComponent
<h1>Hello, world!</h1>
@if (IsInitialized)
{
    <p>Welcome to your new app.</p>
@* <AntForm TEntity="FooModel" TForm="FooModelForm"> *@
@*     <ExternalInput Context="@context"></ExternalInput> *@
@* </AntForm> *@
@* *@
@* <AntForm TEntity="FooModel" TForm="FooModelForm"> *@
@*     <ExternalInput Context="@context"></ExternalInput> *@
@* </AntForm> *@
@* *@
@* <AntForm TEntity="FooModel" TForm="FooModelForm"> *@
@*     <ExternalInput Context="@context"></ExternalInput> *@
@* </AntForm> *@
    @* *@
    @* <BarAntRepositoryList @ref="_barList" PageSize="2"> *@
    @*     <AntDesign.Column Title="Id" @bind-Field="@context.Id" Sortable Filterable> *@
    @*         @context.Id *@
    @*     </AntDesign.Column> *@
    @*     <AntDesign.Column Title="Название" @bind-Field="@context.Bar" Sortable Filters="_barFilter"> *@
    @*         @context.Bar *@
    @*     </AntDesign.Column> *@
    @*     <ActionColumn> *@
    @*         <Popconfirm Placement="@PlacementType.Left" Title="Вы действительно хотите удалить это Bar?" *@
    @*                     OnConfirm="@(() => _barList.DeleteAsync(context))" *@
    @*                     OkText="Удалить" *@
    @*                     CancelText="Нет"> *@
    @*             <Button Size="small"> *@
    @*                 Удалить *@
    @*             </Button> *@
    @*         </Popconfirm> *@
    @*     </ActionColumn> *@
    @* </BarAntRepositoryList> *@
    @* *@
    <AntRepositoryForm TEntity="BarModel" TEntityPk="Guid" TForm="BarForm" EntityId="Bars.OrderBy(b => b.Id).First().Id" @ref="_frm">
        @if (context.StorageItem is not null)
        {
            <p>Storage item: @context.StorageItem</p>
        }
        @foreach (var file in context.StorageItems)
        {
            <p>Storage item: @file</p>
        }
        <AntDesign.FormItem Label="Bar">
            <AntDesign.Input @bind-Value="@context.Bar"/>
        </AntDesign.FormItem>
        <AntDesign.FormItem>
            <AntStorageImageInput Storage="@Storage"
                                  MaxFileSize="@(2 * 1024 * 1024)"
                                  MaxAllowedFiles="10"
                                  UploadPath="bars"
                                  GenerateMetadata="@((request, stream) => GenerateMetadataAsync(request, stream))"
                                  InitialImage="@context.StorageItem"
                                  OnUpdate="@(result => { context.StorageItem = result; context.NotifyChange(); return Task.CompletedTask;})">
            </AntStorageImageInput>
        </AntDesign.FormItem>
        <FormItem>
            <AntStorageImagesInput Storage="@Storage"
                                   MaxFileSize="@(2 * 1024 * 1024)"
                                   MaxAllowedFiles="10"
                                   UploadPath="bars"
                                   GenerateMetadata="@((request, stream) => GenerateMetadataAsync(request, stream))"
                                   InitialImages="@context.StorageItems"
                                   OnUpdate="@(results => { context.StorageItems = results.ToList(); context.NotifyChange(); return Task.CompletedTask;})">
            </AntStorageImagesInput>
        </FormItem>
        <FormItem>
            <AntStorageFilesInput Storage="@Storage"
                                   MaxFileSize="@(2 * 1024 * 1024)"
                                   MaxAllowedFiles="10"
                                   UploadPath="bars"
                                   GenerateMetadata="@((request, stream) => GenerateMetadataAsync(request, stream))"
                                   InitialFiles="@context.StorageItems"
                                   OnUpdate="@(results => { context.StorageItems = results.ToList(); context.NotifyChange(); return Task.CompletedTask;})">
            </AntStorageFilesInput>
        </FormItem>
        @foreach (var foo in context.Foos)
        {
            <AntDesign.FormItem Label="Foo">
                <AntDesign.Input @bind-Value="@foo.Foo"/>
            </AntDesign.FormItem>
            <Button OnClick="() => { context.Foos.Remove(foo); context.NotifyChange();}">Remove foo</Button>
        }
        <Button OnClick="() => context.Foos.Add(new FooModel())">Add foo</Button>
        <Button Disabled="@(!context.CanSave())" OnClick="@context.Save">Save</Button>
    </AntRepositoryForm>
    <Button OnClick="async () => await _frm.Form.ResetAsync()">Reset</Button>
}
