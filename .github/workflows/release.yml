name: Release

on:
    release:
        types:
            - created

jobs:
    build:
        runs-on: self-hosted
        container: docker.pkg.github.com/sitkoru/github-runner/runner:latest
        env:
            APP_VERSION: ${{ github.event.release.tag_name }}
            POSTGRES_HOST: postgres
            XUNIT_USE_POSTGRES: "true"
            MINIO_SERVER_URI: http://minio:9000
            MINIO_ACCESS_KEY: ptTYf7VkCVbUjAzn
            MINIO_SECRET_KEY: RddqonEnrZZaCU7kkZszN9yiMFkX7rH3
            QUEUE_NATS_HOST: nats
            QUEUE_NATS_CLUSTER_NAME: test-cluster
            SONYFLAKE_URI: http://sonyflake
        services:
            nats:
                image: nats-streaming:latest
            sonyflake:
                image: titpetric/sonyflake
            minio:
                image: bitnami/minio:2020.7.2
                env:
                    MINIO_ACCESS_KEY: ptTYf7VkCVbUjAzn
                    MINIO_SECRET_KEY: RddqonEnrZZaCU7kkZszN9yiMFkX7rH3
            postgres:
                image: postgres:alpine
                env:
                    POSTGRES_HOST_AUTH_METHOD: trust
        steps:
            -   uses: actions/checkout@v2
            -   name: Restore
                run: dotnet restore --locked-mode
            -   name: Tests Sitko.Core.Queue
                run: dotnet test --no-restore $(pwd)/tests/Sitko.Core.Queue.Test/Sitko.Core.Queue.Tests.csproj
            -   name: Sitko.Core.Queue.Nats
                run: dotnet test --no-restore $(pwd)/tests/Sitko.Core.Queue.Nats.Tests/Sitko.Core.Queue.Nats.Tests.csproj
            -   name: Sitko.Core.Queue.InMemory
                run: dotnet test --no-restore $(pwd)/tests/Sitko.Core.Queue.InMemory.Tests/Sitko.Core.Queue.InMemory.Tests.csproj
            -   name: Sitko.Core.Queue.Repository
                run: dotnet test --no-restore $(pwd)/tests/Sitko.Core.Repository.Tests/Sitko.Core.Repository.Tests.csproj
            -   name: Sitko.Core.Queue.Sony
                run: dotnet test --no-restore $(pwd)/tests/Sitko.Core.SonyFlake.Tests/Sitko.Core.SonyFlake.Tests.csproj
            -   name: Sitko.Core.Queue.Storage.FileSystem
                run: dotnet test --no-restore $(pwd)/tests/Sitko.Core.Storage.FileSystem.Tests/Sitko.Core.Storage.FileSystem.Tests.csproj
            -   name: Sitko.Core.Queue.Storage.S3
                run: dotnet test --no-restore $(pwd)/tests/Sitko.Core.Storage.S3.Tests/Sitko.Core.Storage.S3.Tests.csproj
            -   name: Create packages
                run: dotnet pack --no-restore -c Release /p:Version=$APP_VERSION -o $(pwd)/packages
            -   name: Create php packages
                run: |
                    mkdir -p Composer/Core
                    mkdir -p Composer/Queue
                    find $(pwd)/src/Sitko.Core.Grpc/Proto -name "*.proto" | xargs /usr/local/bin/protoc --php_out=$(pwd)/Composer/Core --grpc_out $(pwd)/Composer/Core --proto_path=/opt/include --proto_path=$(pwd)/src/Sitko.Core.Grpc/Proto --plugin=protoc-gen-grpc=/usr/local/bin/grpc_php_client_plugin
                    find $(pwd)/src/Sitko.Core.Queue.Nats/Proto -name "*.proto" | xargs /usr/local/bin/protoc --php_out=$(pwd)/Composer/Queue --proto_path=/opt/include --proto_path=$(pwd)/src/Sitko.Core.Queue.Nats/Proto
            -   name: Push to Nuget
                run: find $(pwd)/packages -name *.nupkg -exec dotnet nuget push {} -s https://api.nuget.org/v3/index.json -k $NUGET_API_KEY \;
